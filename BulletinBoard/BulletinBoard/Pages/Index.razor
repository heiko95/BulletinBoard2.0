@page "/"
@using BulletinBoard.Services.Contracts
@using hgSoftware.DomainServices.Models
@using hgSoftware.DomainServices.SettingModels
@inject IBoardElementService BoardElementService

<PageTitle>BulletinBoard</PageTitle>

@if (Elements.Count > 0 && DataIsLoaded)
{
    <BSCarousel style="height:100vh">   
        @foreach(var element in Elements)
        {
           
            @switch(element)
            {
                case ImageElement:    
                    <BSCarouselItem Interval="@ImageInterval">
                        <ImageCard ImageElement=@(element as ImageElement)></ImageCard>
                    </BSCarouselItem>
                    break;
                case PlannerElement:        
                    <BSCarouselItem Interval="@PlannerInterval">
                        <PlannerCard PlannerElement=@(element as PlannerElement)></PlannerCard>   
                    </BSCarouselItem>
                    break;
                case BibleTextElement:
                    <BSCarouselItem Interval="@BibleTextInterval">
                        <BibleVerseCard BibleTextElement=@(element as BibleTextElement)></BibleVerseCard>
                    </BSCarouselItem>
                    break;
            }                 
        }     
    </BSCarousel>
}
else 
{
    <p><em>Loading...</em></p>
}


@code{

    IList<IElement> Elements = new List<IElement>();
    int ImageInterval, BibleTextInterval, PlannerInterval  = 0;  

    bool DataIsLoaded = false;

    protected override async Task OnParametersSetAsync()
    {
        await BoardElementService.InitElements();
        var slideSettings = BoardElementService.GetSlideSettings();       

        Elements = await BoardElementService.GetCurrentElements();

        if (Elements.Count > 1)
        {
            ImageInterval = slideSettings.ImageInterval;
            BibleTextInterval = slideSettings.BibleTextInterval;
            PlannerInterval = slideSettings.PlannerInterval;            
        }

        DataIsLoaded = true;

    }
}








